%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Plantilla de memoria en LaTeX para la ETSIT - Universidad Rey Juan Carlos
%%
%% Por Gregorio Robles <grex arroba gsyc.urjc.es>
%%     Grupo de Sistemas y Comunicaciones
%%     Escuela Técnica Superior de Ingenieros de Telecomunicación
%%     Universidad Rey Juan Carlos
%% (muchas ideas tomadas de Internet, colegas del GSyC, antiguos alumnos...
%%  etc. Muchas gracias a todos)
%%
%% La última versión de esta plantilla está siempre disponible en:
%%     https://github.com/gregoriorobles/plantilla-memoria
%%
%% Para obtener PDF, ejecuta en la shell:
%%   make
%% (las imágenes deben ir en PNG o JPG)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[a4paper, 12pt]{book}
%\usepackage[T1]{fontenc}

\usepackage[a4paper, left=2.5cm, right=2.5cm, top=3cm, bottom=3cm]{geometry}
\usepackage{times}
\usepackage[latin1]{inputenc}
\usepackage[spanish]{babel} % Comenta esta línea si tu memoria es en inglés
\usepackage{url}
%\usepackage[dvipdfm]{graphicx}
\usepackage{graphicx}
\usepackage{float}  %% H para posicionar figuras
\usepackage[nottoc, notlot, notlof, notindex]{tocbibind} %% Opciones de índice
\usepackage{latexsym}  %% Logo LaTeX
\usepackage[font={footnotesize,it}]{caption}
\usepackage{enumitem}

\title{Memoria del Proyecto}
\author{Nombre del autor}

\renewcommand{\baselinestretch}{1.5}  %% Interlineado

\begin{document}

\renewcommand{\refname}{Bibliografía}  %% Renombrando
\renewcommand{\appendixname}{Apéndice}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PORTADA

\begin{titlepage}
\begin{center}
\begin{tabular}[c]{c c}
\includegraphics[scale=0.25]{img/logo_vect.png} &
\begin{tabular}[b]{l}
\Huge
\textsf{UNIVERSIDAD} \\
\Huge
\textsf{REY JUAN CARLOS} \\
\end{tabular}
\\
\end{tabular}

\vspace{3cm}

\Large
DOBLE TITULACIÓN EN INGENIERÍA DE TELECOMUNICACIÓN Y LICENCIATURA EN \\
ADMINISTRACIÓN Y DIRECCIÓN DE EMPRESAS

\vspace{0.4cm}

\large
Curso Académico 2015/2016

\vspace{0.8cm}

Trabajo Fin de Carrera

\vspace{2cm}

\LARGE
DR. SCRATCH: FOMENTANDO LA CREATIVIDAD Y VOCACIÓN CIENTÍFICA \\CON SCRATCH

\vspace{2.5cm}

\large
Autor : Mari Luz Aguado Jiménez \\
Tutor : Dr. Gregorio Robles Martínez \\
Co-Tutor : Jesús Moreno León
\end{center}
\end{titlepage}

\newpage
\mbox{}
\thispagestyle{empty} % para que no se numere esta pagina

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Para firmar
\clearpage
\pagenumbering{gobble}
\chapter*{}

\vspace{-4cm}
\begin{center}
\LARGE
\textbf{Proyecto Fin de Carrera}

\vspace{1cm}
\large
DR. SCRATCH: FOMENTANDO LA CREATIVIDAD \\Y VOCACIÓN CIENTÍFICA CON SCRATCH

\vspace{1cm}
\large
\textbf{Autor :} Mari Luz Aguado Jiménez \\
\textbf{Tutor :} Dr. Gregorio Robles Martínez \\
\textbf{Co-Tutor :} Jesús Moreno León

\end{center}

\vspace{1cm}
La defensa del presente Proyecto Fin de Carrera se realizó el día \qquad$\;\,$ de \qquad\qquad\qquad\qquad \newline de 20XX, siendo calificada por el siguiente tribunal:


\vspace{0.5cm}
\textbf{Presidente:}

\vspace{1.2cm}
\textbf{Secretario:}

\vspace{1.2cm}
\textbf{Vocal:}


\vspace{1.2cm}
y habiendo obtenido la siguiente calificación:

\vspace{1cm}
\textbf{Calificación:}


\vspace{1cm}
\begin{flushright}
Fuenlabrada, a \qquad$\;\,$ de \qquad\qquad\qquad\qquad de 20XX
\end{flushright}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Dedicatoria

\chapter*{}
\pagenumbering{Roman} % para comenzar la numeracion de paginas en numeros romanos
\begin{flushright}
\textit{Dedicado a \\
mi familia, pareja y amigos.}
\end{flushright}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Agradecimientos

\chapter*{Agradecimientos}
%\addcontentsline{toc}{chapter}{Agradecimientos} % si queremos que aparezca en el índice
\markboth{AGRADECIMIENTOS}{AGRADECIMIENTOS} % encabezado 



----(Aquí vienen los agradecimientos\ldots Aunque está bien acordarse de la pareja,
no hay que olvidarse de dar las gracias a tu madre, que aunque a veces no lo 
parezca disfrutará tanto de tus logros como tú\ldots Además, la pareja quizás
no sea para siempre, pero tu madre sí.)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Resumen

\chapter*{Resumen}
%\addcontentsline{toc}{chapter}{Resumen} % si queremos que aparezca en el índice
\markboth{RESUMEN}{RESUMEN} % encabezado

\textbf{Dr. Scratch} es una plataforma web de software libre que permite analizar
proyectos realizados en \textit{Scratch} -lenguaje orientado a la enseñanza-
 aportando feedback sobre determinados aspectos y 
aptitudes relacionadas con el \textit{Pensamiento Computacional}. El \textbf{objetivo} 
principal del proyecto es dar soporte tanto a maestros como estudiantes de 
educación obligatoria en sus primeros pasos en la programación con Scratch.

Este \textbf{proyecto} es el resultado del trabajo de cinco personas, no sólo el mío. Por 
lo que iré indicando durante toda la memoria cuál ha sido mi aportación de la 
forma más concreta posible. Destacar, que es un proyecto amplio, ya que ha sido 
desarrollado durante algo más de un año y aún está en proceso.

Las \textbf{tecnologías} utilizadas han sido diversas debido a que es un proyecto en 
producción, hay miles de proyectos analizados por numerosos colegios y 
organizaciones. Para conseguir tener la web en producción hemos utilizado 
Azure y la licencia Apache. Por debajo de ello, tenemos un servidor 
desarrollado en Python 2.7 con la ayuda del framework Django 1.8 que nos ha facilitado 
multitud de tareas de la parte back-end. Además, para el registro de usuarios, 
organizaciones y guardar toda la información de los proyectos analizados tenemos 
una base de datos en MySQL. Pero el front-end es lo que más trabajo nos ha 
supuesto, porque hemos ido realizando modificaciones según las necesidades de 
los usuarios. De este modo, HTML, CSS con la ayuda de Bootstrap, Javascript y 
AJAX han sido utilizados diariamente. 

Actualmente, se está introduciendo la programación en las aulas de numerosos 
colegios de nuestro país. Pero existe la \textbf{problemática} de falta de formación 
en esta materia de la mayoría de maestros de educación obligatoria. El proyecto
trata de suplir esta deficiencia y guiar a dicho colectivo en sus primeros pasos. 
Además, sus dashboards han sido diseñados de un modo tan sencillo, que la idea 
es que un alumno con un nivel de comprensión lectora media, sea capaz de aprender 
por sí mismo utilizando la herramienta. 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ÍNDICES %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Las buenas noticias es que los índices se generan automáticamente.
% Lo único que tienes que hacer es elegir cuáles quieren que se generen,
% y comentar/descomentar esa instrucción de LaTeX.

%%%Índice de contenidos
\tableofcontents 
%%%Índice de figuras
\cleardoublepage
\addcontentsline{toc}{chapter}{Lista de figuras} % para que aparezca en el indice de contenidos
\listoffigures % indice de figuras
%%%Índice de tablas
\cleardoublepage
\addcontentsline{toc}{chapter}{Lista de tablas} % para que aparezca en el indice de contenidos
\renewcommand{\listtablename}{Índice de tablas} 
\listoftables % indice de tablas


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INTRODUCCIÓN %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Introducción}
\label{sec:intro} % etiqueta para poder referenciar luego en el texto con ~\ref{sec:intro}
\pagenumbering{arabic} % para empezar la numeración de página con números

La forma más eficaz de interesar a una persona por un tema, es hacer que se 
\textbf{involucre}. Y las formas de conseguir ese compromiso, dependen en gran 
medida, de nuestras aptitudes personales, tales como la capacidad de 
comunicación, creatividad, innovación y liderazgo. \textit{Pero hoy en día 
tenemos un gran aliado, las nuevas tecnologías}. 

En este capítulo, se trata la situación actual de la educación y cómo 
aprender a programar en \textit{Scratch}, puede ayudar a desarrollar aptitudes 
relacionadas con el \textit{Pensamiento Computacional}.

%%%%%%%%%%%%%%%%%%%%%%% MARCO GENERAL %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Marco general}
\label{sec:marco-general}

Uno de los sectores más gratificantes en los que se puede trabajar, es
la \textbf{educación}. Pero en sí mismo, es a la vez, todo un reto. Por descontado, 
decir, que no todo estudiante es igual, pero además, los estudiantes cambian junto con 
la \textit{evolución de la sociedad} y hoy en día la sociedad está cambiando a un ritmo 
desproporcionado, ligada al \textit{desarrollo de la tecnología}. Ya no hacemos
 -casi- nada como hace veinte años, y por tanto, tampoco aprendemos de la misma forma.


Como siempre, en la evolución del ser humano, lo único que está seguro 
es el \textbf{cambio}, y es nuestra capacidad de adaptación a dichos cambios, lo 
que nos hace tener éxito, o no, en los retos que nos proponemos. La educación no 
iba a ser diferente y en los últimos años, los currículos españoles han sufrido 
inmensas modificaciones con el \textit{proceso de Bolonia}. Ahora toca ponerse 
manos a la obra, para tratar de adaptarnos a lo que la sociedad está demandando, 
para poder seguir dando una educación de calidad. Es el momento de incorporar 
\textit{nuevas herramientas} y metodologías, que permitan desarrollar las 
habilidades que el mercado laboral está demandando.


En unos años, la mayoría de las ofertas de trabajo serán para puestos
cualificados, en los que se demandará -prácticamente en todos- tener nociones de
\textbf{programación}. La programación, esa gran desconocida, que muchas veces tiene
connotaciones negativas, sobre todo, entre la sección femenina. 


Pero el mayor problema, es el citado. \textit{No se conoce.} No se ha tratado de 
involucrar a la sociedad en dicha materia, hasta ahora que el día a día ha 
empezado a exigirlo. Todo funciona a través de internet, si no tienes tu comercio
en la red estas anticuado, así que necesitas aprender sobre e-commerce. Y necesitas
una web en la que se muestren tus productos, la gente no tiene tanto tiempo para
desplazarse, o si lo tiene, ¿para qué ir a tu tienda si puede ver los productos 
de otro desde su casa? Necesitas alguien que te programe una página web propia. 


Y este es el caso más sencillo, ya que la programación está tomando también un gran
protagonismo en muchísimos otros sectores, tales como la industria, muchísimas
fábricas poseen robots programados. Así pues, se está convirtiendo en una \textit{tarea 
obligatoria a la hora de entrar en el mercado laboral.} 


Pero, \textbf{¿y sí empezamos a enseñar a programar desde la infancia?} Numerosos estudios
están demostrando que aprendiendo a programar se desarrolla el \textit{Pensamiento 
Computacional}, el cual consta de ciertas habilidades, tales como la abstracción o
lógica. Estas, no únicamente son útiles para aprender a programar, sino en muchísimas
de las demás asignaturas del currículo pueden servir para involucrar al alumnado
en un proyecto que puede tocar y modificar a su gusto a través de la programación.
\textit{Puede aprender mientras experimenta}. 

Un ejemplo claro es el de la abstracción, que se ve directamente relacionada con
las matemáticas, si se enseña a dividir un problema grande en otros más pequeños,
 es más fácil reconocer cada parte del problema. Así, el alumno sabrá 
identificar cuándo tiene que sumar o cuándo multiplicar, cuando tiene un 
problema con varias operaciones. 


Hace años, aprender a programar era una tarea compleja, la información para 
empezar a hacer tu propio programa, sólo se podía encontrar en libros 
complicadísimos de entender. Y los lenguajes de programación que existían no eran
los más intuitivos. Hoy en día, no hay excusas.


En la siguiente subsección, se va a presentar un lenguaje de programación muy 
apropiado para iniciarse en el mundo de la programación, de un modo simple, 
motivador y divertido.


%%%%%%%%%%%%%%%%%%%%%%%%%%%% SCRATCH %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Programación con Scratch}
\label{sec:scratch}

\textbf{Scratch}\footnote{\url{https://scratch.mit.edu/}} es un lenguaje de 
programación orientado a la enseñanza. Ha sido diseñado por el 
\textit{Grupo Lifelong Kindergarten del Laboratorio de 
Medios del MIT}, y dirigido por \textit{Mitchel Resnick}. Su principal 
\textbf{objetivo}, es ayudar a los más jóvenes a pensar  de forma creativa, 
razonar sistemáticamente, y trabajar de forma colaborativa. 
Aptitudes tan necesarias para la vida en el siglo XXI.

La mayor \textbf{fortaleza} de Scratch, es permitir crear historias, juegos y
animaciones \textit{sin tener conocimientos previos de programación}. La forma 
de programar en este lenguaje es uniendo piezas estilo \textit{LEGO}.

\begin{figure}[H]
    \centering
    \includegraphics[width=0.7\textwidth]{img/scratch}
    \textit{\caption{Logo de Scratch}}
    \label{figure:scratch}
\end{figure}

\textit{No es necesario escribir código}, con su respectiva sintaxis y todo lo que ello conlleva. 
En lugar de utilizar tiempo en aprender los detalles específicos que 
tiene cada lenguaje de programación, Scratch tiene una serie de \textbf{bloques} agrupados
por categorías -cada una con un color, para que sean claramente identificables- dentro
de la cual tenemos las piezas del puzzle que arrastraremos para ir indicándole a
nuestro videojuego o historia, cuáles son las instrucciones a seguir. En la 
\textit{Figura~\ref{figure:bloques}} podemos observar cuáles son los principales
bloques que pueden ser utilizados en Scratch y apreciar todo su potencial.

\begin{figure}[H]
    \centering
    \includegraphics[width=0.9\textwidth]{img/bloques}
    \caption{Bloques en Scratch}
    \label{figure:bloques}
\end{figure}



Pero no se queda ahí, Scratch, es además, una \textbf{comunidad} donde se pueden
\textit{compartir} los proyectos realizados y se pueden exponer dudas en su 
\textit{foro}. De esta forma, se puede aprender de forma dinámica con la ayuda 
de otros programadores y observando lo realizado en otros proyectos. También 
tenemos la opción de \textit{reinventar} otros proyectos, es decir, coger 
un proyecto realizado por otro Scratcher y modificarlo a nuestro gusto.


\begin{figure}[H]
    \centering
    \includegraphics[width=0.7\textwidth]{img/estadisticas-scratch}
    \caption{Estadísticas de la comunidad de Scratch}
    \label{figure:estadisticas-scratch}
\end{figure}

En la \textit{Figura~\ref{figure:estadisticas-scratch}} se muestran las estadísticas
de la comunidad de Scratch en enero de 2016.

Este lenguaje de programación es \textit{utilizado en más de 150 países y en los más
diversos entornos} -museos, bibliotecas, escuelas o universidades son algunos-
principalmente, por jóvenes entre los 8 y 16 años. El único requisito para 
utilizarlo es saber leer.

Actualmente la versión es Scratch 2.0 pero hubo una versión anterior (1.4) que
aún está siendo utilizada, sobre todo en su \textbf{versión offline}. Porque pensando
en las dificultades de conexión que se tiene en algunos centros, Scratch posee
una versión descargable que puede ser utilizada sin conexión a la red.

Scratch se  ha convertido en un movimiento mundial con su propio día -Scratch Day-
y una conferencia que se realiza cada verano -Scratch Conference- en la que 
el equipo de Dr. Scratch participó en 2015. Se organizó en Ámsterdam, donde 
pudimos observar las tendencias e ideas mundiales desarrolladas para potenciar 
las habilidades de los jóvenes programadores que utilizan Scratch.


 
%%%%%%%%%%%%%%%%%%%%%%% MARCO DE REFERENCIA %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Marco de referencia}
\label{sec:marco-referencia}

\textbf{Dr. Scratch}\footnote{\url{http://www.drscratch.org/}}
 surge de la observación de mi tutor en este proyecto -Dr. Gregorio Robles- y del doctorando
-Jesús Moreno- de la necesidad de una herramienta para Scratch que otorgue 
feedback sobre los diferentes aspectos que engloban el \textit{Pensamiento Computacional}.

Tras años dedicados a la enseñanza de programación y ciencias de la computación,
llegaron a la siguiente conclusión; era necesario tener una herramienta similiar a
Pylint -herramienta que permite \textit{detectar malas prácticas en el código del lenguaje de 
programación} Python- para el nuevo lenguaje de programación Scratch.

Para poder analizar un proyecto programado con Scratch necesitamos inspeccionar
su archivo. Los archivos generados en Scratch para cada proyecto, tienen un 
formato comprimido concreto con extensión \textit{.sb2} cuyo
contenido está conformado por las distintas imágenes y sonidos utilizados en el
proyecto y un \textit{fichero JSON que contiene la información relevante} a los bloques
de Scratch que se han utilizado. Es decir, para evaluar
cómo de bien se ha programado un proyecto, lo que nos interesa es conocer dicho
JSON y analizar su contenido.

La tarea de analizar toda la información otorgada por el fichero JSON no es fácil,
pero encontraron en Github\footnote{\url{https://github.com/}} un plugin que ya 
hacía dicha tarea. Este plugin es 
\textbf{Hairball}\footnote{\url{https://github.com/ucsb-cs-education/hairball}} que ha
sido implementado por \textit{Bryce Boe}\footnote{\url{https://github.com/bboe}}
y únicamente presenta información sobre \textbf{los aspectos del Pensamiento Computacional}:
\textit{pensamiento lógico, control de flujo, abstracción, paralelismo, interactividad 
con el usuario, representación de la información y sincronización.}

Jesús Moreno añadió otros cuatro plugins a \textit{Hairball} que inspeccionaban el fichero JSON buscando
indicios de los \textbf{malos hábitos que todo programador novato tiene al principio}:
\textit{código muerto, programas duplicados, nombres inadecuados y atributos no inicializados.}
Su tesis explica de forma detallada cómo trabajan todos estos plugins y cuál es
la relación que tienen los distintos aspectos del Pensamiento Computacional, además
de demostrar cómo el desarrollo del Pensamiento Computacional ayuda a desarrollar
habilidades que son compartidas con materias recogidas en los currículos del 
proceso Bolonia, por lo que aprender a programar puede ayudar a obtener mejores
resultados en la enseñanza de asignaturas como Inglés, Matemásticas o Filosofía.

Dr. Scratch es un proyecto aún en desarrollo y ha tenido dos versiones hasta 
el momento. A continuación se muestran las dos versiones existentes de Dr. Scratch,
tratando de explicar cuáles han sido las aportaciones de la versión anterior, para
tener una visión del punto de partida con el que se contaba. 
\begin{itemize}
 \item La \textit{versión Alpha} fué creada por el alumno Cristian Chusing, su principal 
aportación fue la creación de una página web inicial donde se pudiera subir un
archivo con extensión .sb2 y mostrase un dashboard con toda la información obtenida
con los pluguins de Hairball. La apariencia de dicha web es la mostrada en la
\textit{Figura~\ref{figure:alpha-version-web}}. 

\begin{figure}[H]
    \centering
    \includegraphics[width=0.9\textwidth]{img/alpha-version-web}
    \caption{Apariencia de la versión Alpha de Dr. Scratch}
    \label{figure:alpha-version-web}
\end{figure}

 \item La \textit{versión Beta} es la que he estado programando desde noviembre de 2014 con
la ayuda de mi compañera Eva Hu Garres desde febrero de 2015. Ha sido realizado 
durante el periodo en el que fuimos contratadas a media jornada en la Universidad 
Rey Juan Carlos como técnicos de apoyo y difusión. 
Todo este proyecto se ha podido llevar a cabo gracias a la
financiación otorgada por el FECyT (Fundación Española para la Ciencia y la Tecnología),
 además, de ser galardonado con un Google RISE Award en 2015 y del apoyo de la 
asociación sin ánimo de lugro Programamos. Esta versión es 
la que se va a detallar en este documento.
\end{itemize}

Al ser una plataforma en producción, se han realizado distintas pruebas 
en colegios, para comprobar el uso que realizaban los alumnos de ella,
permitiéndonos observar cuáles eran las necesidades que demandaban. 
A lo largo de esta memoria se irán comentando los cambios introducidos 
en la herramienta y las razones que los han motivado.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ESTRUCTURA %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Estructura de este documento}
\label{sec:estructura}

Intentando facilitar la lectura de esta memoria, se procede a explicar su
estructura, detallando qué contenido tendrá cada capítulo: 

\begin{enumerate}[label=\textbf{\arabic{*}.}]
    \item \textbf{Introducción.} Explicación del marco social en el que se
    enmarca este proyecto, así como el marco de referencia en el que se ha 
    desarrollado. Se muestra cuál ha sido la motivación para su realización
    y las fases iniciales del mismo.

    \item \textbf{Objetivos.} Aquí se muestra cuáles han sido las metas a obtener para
    poder dar respuesta a la necesidad observada. Además, se indica cuáles han
    sido las funcionalidades a implementar. Éstas últimas, se mostrarán también,
    en una línea cronológica en las que se dividirá el tiempo en corto plazo,
    medio y largo, mediante un planteamiento temporal.
 
    \item \textbf{Estado del arte.} En este capítulo, se hablará de las distintas
    tecnologías utilizadas para poder llevar a cabo la consecución del proyecto
    y se dará una explicación breve de las mismas.

    \item \textbf{Diseño e implementación.} Tras conocer las tecnologías, entraremos
    a ver cómo las hemos utilizado para diseñar nuestra plataforma. Se explicará
    detalladamente cuál es la arquitectura de Dr. Scratch y todas sus funcionalidades.

    \item \textbf{Interfaz de usuario.} Repaso rápido de la web y cuáles han sido
    sus modificaciones. Se indicará cuáles han sido las razones para los cambios en
    la mismas, mostrando así la evolución de la web según las necesidades del usuario
    recalcando las diferencias entre el prototipo inicial y el que está ahora mismo
    en producción.

    \item \textbf{Resultados.} Al ser un proyecto en producción, conviene observar
    cuáles han sido los resultados obtenidos: número de proyectos analizados, 
    número de organizaciones registradas e impacto en general.

    \item \textbf{Conclusiones.} Capítulo en el que se realiza una reflexión 
    general de los resultados obtenidos y cuál ha sido la consecución de los 
    objetivos marcados inicialmente. Se indicará lo
    aprendido durante la formación en la Universidad Rey Juan Carlos y que ha 
    sido aplicado en la realización de este Proyecto Fin de Carrera. Así mismo,
    también se presentarán cuáles son los conocimientos adquiridos durante la 
    realización del proyecto Dr. Scratch y cuáles serían los siguientes pasos 
    que se podrían dar en el mismo. Y para terminar, expresar mi valoración 
    personal de todo lo que  me ha aportado Dr. Scratch.

\end{enumerate}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% OBJETIVOS %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Objetivos}
\label{chap:objetivos}

El principal \textbf{objetivo} de todo proyecto, es cubrir la necesidad que ha 
sido observada y que ha motivado la realización del mismo. Pero para poder 
llegar a dicho resultado es necesario detallar concretamente y sin ambigüedad 
qué es lo que queremos conseguir en cada etapa. En este capítulo se describen 
dichos objetivos iniciales, con la intención de poder reflexionar más tarde
observando los resultados, cuáles han sido alcanzados y estudiar cuáles han 
sido los problemas o motivos que han repercutido en que no se logre alguno de ellos.
Además, se indica el planteamiento temporal que se eligió para lograr alcanzar 
su consecución.

%%%%%%%%%%%%%%%%%%%%%%% OBJETIVO GENERAL %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Objetivo general}
\label{sec:objetivo-general}

El \textbf{objetivo} de este proyecto es el diseño y desarrollo de una 
herramienta web donde poder analizar proyectos programados en el lenguaje Scratch. 
El análisis nos reportará información de aspectos relacionados con el 
\textit{Pensamiento Computacional} que debemos mejorar. 

Para entender dicho objetivo, es necesario comprender qué es el pensamiento
computacional y qué aspectos son los que queremos cubrir y cómo.

Cuando una persona empieza en el mundo de la programación,
necesita desarrollar ciertas habilidades y cambiar en cierta medida el modo de
plantear los problemas a los que se enfrenta. Necesita comenzar a pensar como
lo haría un científico, lo que conlleva abordar los problemas de un modo 
diferente. Para ello, necesita desarrollar unas habilidades específicas que pueden
ser muy útiles en otras disciplinas. Estas habilidades son las que se deben
trabajar para conseguir un desarrollo del pensamiento computacional.

\textit{Jeannette Wing}\footnote{\url{http://www.cs.cmu.edu/~wing/}} 
en su artículo 
\textit{Computational thinking}\footnote{\url{https://www.cs.cmu.edu/~CompThink/papers/Wing06.pdf}} 
indicó que el pensamiento computacional implica resolver problemas, 
diseñar sistemas y comprender el comportamiento humano, haciendo uso de los 
conceptos fundamentales de la informática.


La finalidad de Dr. Scratch es analizar el proyecto realizado en Scratch y 
evaluar dichos conceptos claves de las ciencias computacionales, en concreto,
se centra en 7 aspectos:

\begin{enumerate}[label=\textbf{\arabic{*}.}]
    \item \textbf{Paralelismo.} Consiste en poder resolver varios problemas de manera
    simúltanea en hilos diferentes.

    \item \textbf{Pensamiento lógico.} Nos permite reconocer el problema que 
    queremos solucionar, buscar una solución que podamos programar y analizar 
    las salidas que obtengamos para formarnos conclusiones.
 
    \item \textbf{Control de flujo.} Es la capacidad de poder coordinar el 
    orden en que se ejecutan las instrucciones que tenemos en el programa.

    \item \textbf{Interactividad con el usuario.} Habilidad que permite crear
    proyectos interactivos, que permitan que el usuario que ejecuta el programa,
    pueda realizar acciones que provoquen nuevas situaciones en el proyecto.

    \item \textbf{Representación de la información.} Capacidad de un programador
    de detectar los datos que el programa necesita, para poder ejecutarse
    correctamente.

    \item \textbf{Abstracción.} Concepto que ayuda a dividir un problema en 
    partes más pequeñas que serán más fáciles de comprender, programar y depurar.

    \item \textbf{Sincronización.} Es la comunicación entre las distintas partes
    del programa que permite la planificación de la ejecución de las instrucciones,
    en un orden determinado que ha sido elegido con anterioridad. 

\end{enumerate}


Todos estos conceptos han de ser evaluados de forma que el usuario al final 
obtenga una \textbf{puntuación total que califique el nivel de desarrollo del pensamiento
computacional del programador de proyectos en Scratch}. La evaluación se realiza 
conforme a los bloques de Scratch utilizados y es parte del trabajo de 
Jesús Moreno en su tesis. 

Pero Dr. Scratch va más allá. Incluye además información sobre malas \textbf{prácticas
realizadas en programación} observadas en sus años de educación de mi tutor y
co-tutor y que todo programador novel realiza en sus primeros proyectos -y últimos
si no aprende a corregirlos-.

De esta forma, Dr. Scratch trata de dar una puntuación basada en el nivel 
computacional del programador, pero además sirve de apoyo
para aprender a programar correctamente. Esto la convierte en una herramienta 
muy útil, tanto para docentes como estudiantes.



%%%%%%%%%%%%%%%%%%%%%%% OBJETIVOS ESPECÍFICOS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Objetivos específicos}
\label{sec:objetivos-especificos}

Una vez detallado el objetivo general del proyecto, necesitamos entender en qué
momento de su desarrollo nos encontramos y cuáles son los objetivos que queremos
alcanzar al final de este Proyecto Final de Carrera.

Tal como se ha comentado en la Introducción, ya existía una versión Alpha de la 
web, en la que se tenía un código, que trataba de alcanzar el objetivo e implementación
básica de la web. Dicho código, mostraba una web simple e intentaba analizar el 
archivo .sb2 de Scratch para extraer conclusiones mediante el plugin Hairball y 
mostrarlas en un dashboard.

Al comienzo de este proyecto, dicho código no conseguía realizar correctamente
el análisis del proyecto de Scratch con Hairball, por lo que partiendo de esta 
base, los objetivos iniciales fueron los siguientes:

\begin{enumerate}[label=\textbf{\arabic{*}.}]
    \item \textbf{Corrección de la implementación básica.} El primer objetivo y
    más importante fue conseguir tener en funcionamiento el prototipo que 
    ofrecía la funcionalidad básica. 

    \item \textbf{Generación de un log.} Se quería tener información de todos los
    proyectos analizados en la web: quién lo había analizado -si estaba registrado-,
    nombre del proyecto, hora y fecha. Más tarde, se fue añadiendo información a
    este log según la herramienta se fue ampliando.  

    \item \textbf{Plataforma en producción.} La idea principal, era que una vez
    el prototipo funcionase, tenerlo en producción lo antes posible para ser 
    utilizado y poder tener feedback de cuáles eran las necesidades de los
    usuarios. 

    \item \textbf{Cambio de apariencia de la web.} La web funcionaba, pero no era
    demasiado atractiva y se buscaba tener el máximo número de usuarios posibles,
    por lo que era necesario realizar un cambio. Teníamos además, que buscar
    algún logotipo que mostrase la esencia de Dr. Scratch.

    \item \textbf{Implementación del mecanismo de traducción de la plataforma.}
    Se busca llegar con Dr. Scratch al mayor número de personas y para ello el 
    idioma no debe ser un impedimento. Por ello un objetivo inmediato fue la 
    configuración del servidor para que fuera capaz de traducir la web al idioma
    del navegador que hiciera la petición. 

\end{enumerate}

Dr. Scratch ha sido un proyecto que ha obtenido financiación por parte del \textbf{FECyT}
(Fundación Española para la Ciencia y la Tecnología) y por tanto, hay una serie
de objetivos iniciales que fueron fijados en la memoria de solicitud de la
ayuda. Tenía objetivos referentes tanto a la plataforma web como a otros subobjetivos,
tales como la realización de talleres para garantizar la difusión de la plataforma y
la creación de materiales docentes, entre otros. En este documento únicamente nos centraremos
en los objetivos específicos relacionados con la plataforma web:

\begin{itemize}
    \item Llegar a conseguir más de 5.000 proyectos analizados.
    \item Número de alumnos registrados ($>${1.500})
    \item Número de docentes registrados ($>$120)
    \item Número de visitantes únicos diarios de la web $>$ 25.000
    \item Número de descargas de la aplicación móvil ($>$ 150)
    \item Número de horas del servidor caído en los últimos 6 meses de proyecto ($<$ 100h)
    \item Número de lenguas de la plataforma web ($\geq$5)
\end{itemize}

Nada más tener el prototipo en producción, nos llegaron las primeras peticiones
de los usuarios, y por tanto, más objetivos para nosotros y algunos más que 
surgieron con el avance del proyecto:

\begin{itemize}
    \item Barra de progreso del análisis del proyecto.
    \item Analizar proyectos de las dos versiones de Scratch (1.4 y 2.0),
    únicamente se podía analizar proyectos de la versión 2.0, si intentábamos
    analizar proyectos de la 1.4 la plataforma mostraba un error.
    \item Análisis mediante url del proyecto de la versión online de Scratch.
    \item Cuentas de usuarios.
    \item Implementación en el servidor para mostrar tres páginas diferentes, 
    conforme el nivel del programador fuera: bajo, medio o alto.
    \item Diseño de tres páginas distintas para cada nivel computacional.
    \item Debido al gran número de proyectos que se analizaban diariamente 
        teníamos numerosos problemas con las máquinas de la universidad, por lo que 
        decidimos realizar una migración a la nube.
    \item Utilización de algún mecanismo de analisis web para tener estadísticas 
            de los accesos a la plataforma.
    \item Páginas con información de cómo poder pasar de un nivel a otro utilizando
    distintos bloques de Scratch que demuestran un nivel de pensamiento computacional
    mayor.
    \item Análisis para organizaciones, permitiéndoles analizar varios proyectos
    de Scratch simultáneamente a través de un fichero .csv y le devolviera toda
    la información del análisis.
    \item Cuentas de organizaciones.
    \item Páginas de estadísticas que permitan obtener información acerca de
    la evolución de los usuarios y poder realizar un seguimiento.
    \item Extensión para los navegadores que permitiera analizar un proyecto
    desde la propia página web de Scratch. De forma que únicamente clicando en 
    un botón, la extensión obtuviera la url del proyecto subido y compartido en
    Scratch mostrado en la página actual y abriese una nueva ventana con su 
    análisis en Dr. Scratch.
    \item Además de la traducción automática detectando el idioma mediante la 
    configuración del navegador, tener un botón que permita al usuario modificar
    el idioma.
    \item Página de agradecimiento a los colaboradores: personas que han
    traducido los textos de la web a distintos idiomas, colegios que nos han
    permitido realizar talleres en sus aulas...
    \item Un foro donde los usuarios pudieran expresas sus opiniones y sugerencias
    para poder obtener feedback.
    \item Dashboard para docentes, que mostraran información al maestro sobre
    sus alumnos.

\end{itemize}


En última instancia, se tiene en mente que la web incluya mecanismos de gamificación
para conseguir motivar a los usuarios a seguir aprendiendo utilizando la herramienta,
y además, al más estilo del lenguaje Scratch, tener una red social, que permitiera
a los programadores poder interactuar y dinamizar la plataforma.

%%%%%%%%%%%%%%%%%%%%%%% PLANIFICACIÓN TEMPORAL %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Planificación temporal}
\label{sec:planificacion-temporal}

Al ser un proyecto tan amplio y ser desarrollado en equipo por varias personas, 
quiero dejar lo más detallado posible cuál ha sido el planteamiento temporal y
la participación de todos los integrantes del equipo Dr. Scratch y aportaciones
realizadas por Cristian Chusing en la primera versión Alpha.
En este punto, únicamente desglosaré la planificación temporal, a la que en 
próximas secciones iré incluyendo qué miembros han participado en la consecución
de cada funcionalidad y objetivo.

Este proyecto ha sido muy bien guiado y gestionado por mi tutor y co-tutor
 mediante \textbf{Trello} -herramienta colaborativa 
para organizar proyectos-. Y fueron marcados incialmente, cuáles eran los objetivos
a corto, medio y largo plazo. Según el proyecto fue evolucionando, dichas metas
podían ser modificadas fácilmente gracias a la herramienta y jamás se perdía 
de vista cuáles eran las tareas más inmediatas.


\begin{itemize}
    \item \textbf{FASE I.} Esta etapa del proyecto es la realizada desde
    noviembre de 2014, fecha de comienzo, y febrero de 2015,
    cuando se incorporó al proyecto mi compañera Eva Hu.
    Durante este periodo los objetivos a alcanzar fueron los siguientes:

        \begin{itemize}
            \item Comprender y depurar el código realizado por Cristian Chusing
            en la versión Alpha de Dr. Scratch.
            \item Actualización de la versión 1.4 de Django a la 1.7.
            \item Generación del archivo log explicado con anterioridad.
            \item Puesta en producción del prototipo.
            \item Cambio de apariencia de la web.
            \item Implementación del mecanismo de traducción de la plataforma.
        \end{itemize}
        
    En la \textit{Figura~\ref{figure:fase-i}} se muestra dicha fase de una
forma esquemática y sencilla de comprender.
\end{itemize}

    \begin{figure}[H]
        \centering
        \includegraphics[width=0.9\textwidth]{img/fase-i}
        \caption{Fase I del proyecto Dr. Scratch}
        \label{figure:fase-i}
    \end{figure}
  


\begin{itemize}
    \item \textbf{FASE II.} Esta etapa del proyecto es la realizada desde
    febrero a julio de 2015.

    En esta fase del proyecto los objetivos a alcanzar fueron los siguientes:

        \begin{itemize}
            \item Introducir una barra de progreso del análisis del proyecto.
            \item Corrección de errores en formularios.
            \item Análisis mediante url del proyecto de la versión online de Scratch.
            \item Migración de SQLite a MySQL.
            \item Creación de un archivo en el que se guardaran todos los 
                    proyectos en los que se producía algún error al ser analizados.
            \item Personalización de las páginas de error 404 y 500.
            \item Analizar proyectos de las dos versiones de Scratch (1.4 y 2.0).
            \item Implementación en el servidor para mostrar tres páginas diferentes, 
            conforme el nivel del programador fuera: bajo, medio o alto.
            \item Diseño de tres páginas distintas para cada nivel computacional.
            \item Introducción explicaciones de qué es una url y cómo
            descargar un proyecto en Scratch.
            \item Migración a la nube en lugar de utilizar las máquinas de la 
                    universidad, las cuales nos dieron muchos problemas.
            \item Uso de Google Analytics para tener estadísticas de acceso a la 
                    plataforma.
            \item Páginas explicativas de cómo subir de nivel utilizando bloques 
                    de un mayor nivel computacional.
            \item Nuevo diseño de los dashboards.
            \item Cuentas de organizaciones.
            \item Botón de ``Ayuda'' para saber cómo navegar por el dashboard.
            \item Análisis multiproyecto con un archivo .csv para organizaciones.
            \item Traducción de la información mostrada en el archivo de organizaciones.
            \item Páginas de estadísticas de los proyectos analizados.
            \item Generación de un archivo .csv que muestra la información 
                    obtenida con el analáisis realizado en Dr. Scratch y es el 
                    que se le devuelve a la organización.
        \end{itemize}
        
    En la \textit{Figura~\ref{figure:fase-ii}} podemos ver otro esquema que
escenifica esta fase.
\end{itemize}

    \begin{figure}[H]
        \centering
        \includegraphics[width=1.0\textwidth]{img/fase-ii}
        \caption{Fase II del proyecto Dr. Scratch}
        \label{figure:fase-ii}
    \end{figure}
  



\begin{itemize}
    \item \textbf{FASE III.} Abarca el periodo entre septiembre de 2015 y 1 de 
                febrero de 2016, fecha en la que empecé a escribir esta memoria.

    Trás la Scratch Conference en Ámsterdam a la que acudió todo el equipo de 
        Dr. Scratch y en la que realicé una presentación de la plataforma, 
        pudimos obtener algunas conclusiones gracias a la realimentación obtenida. 
        Debido a ellas, marcamos los siguientes objetivos:

        \begin{itemize}
            \item En el análisis por URL únicamente descargar el .JSON para que 
                    se realice más rápidamente.
            \item Traducción de los bloques pintados en las páginas para aprender 
                    cómo subir de nivel de pensamiento computacional.
            \item Registro de usuarios.
            \item Botón para traducir la página según la preferencia del usuario 
                    y no del navegador.
            \item Extensión que permita analizar proyectos sin necesidad de abrir 
                    en el navegador la propia página de URL, sino que en la página 
                    del proyecto de Scratch nos facilite un botón que ya muestre 
                    directamente el análisis realizado.
            \item Traducción de los textos que aparecen en la plataforma a más 
                    idiomas: catalán, gallego y portugués.
            \item Formulario de registro para usuarios y organizaciones.
        \end{itemize}
        
    En la \textit{Figura~\ref{figure:fase-iii}} podemos observar estos objetivos 
    detallados en el tiempo.
\end{itemize}

    \begin{figure}[H]
        \centering
        \includegraphics[width=0.9\textwidth]{img/fase-iii}
        \caption{Fase III del proyecto Dr. Scratch}
        \label{figure:fase-iii}
    \end{figure}
  


Actualmente, el proyecto continúa desarrollandose, con la ayuda de la Asociación 
sin ánimo de lucro \textbf{Programamos} en la que mi co-tutor, Jesús Moreno, 
es co-fundador junto con José Ignacio Huertas. 



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ESTADO DEL ARTE %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Estado del arte}

En este capítulo se detallarán de forma resumida las \textbf{arquitecturas y 
tecnologías} utilizadas en la realización de este proyecto. Únicamente se 
realizará una presentación de las mismas, ya que en el próximo capítulo será 
donde se detalle cómo han sido utilizadas para el desarrollo e implementación 
de la plataforma.


%%%%%%%%%%%%%%%%%%% APLICACIONES CLIENTE-SERVIDOR %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Aplicaciones cliente-servidor} 
\label{sec:aplicaciones-cliente-servidor}

El paradigma \textbf{Cliente-Servidor}~\cite{liu2004computacion} es utilizado en diversos 
contextos. Centrándonos en el patrón arquitectural para software distribuido 
cabe indicar que es un modelo en el que existen dos tipos de elementos 
-cliente y servidor- y un modelo de interacción basado en un diálogo -petición y respuesta-.

El objetivo de esta arquitectura es \textbf{proporcionar el soporte escalable} para el 
desarrollo de aplicaciones distribuidas.

En cuanto a sus \textbf{elementos}:

      \begin{itemize}
            \item \textbf{El cliente.} Es la parte de la aplicación con la que 
interacciona el usuario pero no es compartida entre los mismos. No tiene 
restricciones especiales referentes a fiabilidad, ya que si falla un cliente, 
el resto del sistema no se ve afectado. Pero sí las tiene en términos de 
ergonomía debido a que debe adaptarse a la interacción con el usuario. 
Este último aspecto en concreto, será tratado con profundidad en el siguiente 
capítulo, ya que ha sido la mayor preocupación a la hora de diseñar la plataforma.
            \item \textbf{El servidor.} Es el componente que presta servicios 
al cliente, compartiendo sus recursos con todos ellos. Tiene una gran restricción 
y es que si el servidor falla, los clientes no pueden continuar. Además de 
presentar problemas de escalabilidad y debe ser seguro para no comprometer la 
seguridad de los clientes ni de los datos.
        \end{itemize}

En la \textit{Figura~\ref{figure:cliente-servidor}} podemos observar sus
componentes y el intercambio de mensajes. El protocolo de intercambio de mensajes
será explicado más adelante.

    \begin{figure}[H]
        \centering
        \includegraphics[width=1.1\textwidth]{img/cliente-servidor}
        \caption{Esquema del paradigma Cliente-Servidor}
        \label{figure:cliente-servidor}
    \end{figure}

También es importante entender que la finalidad de una aplicación distribuida es la de 
ofrecer funcionalidades al usuario y que su \textbf{estructura} es siempre la 
que se muestra en la \textit{Figura~\ref{figure:aplicacion-distribuida}}.
    \begin{figure}[H]
        \centering
        \includegraphics[width=0.5\textwidth]{img/aplicacion-distribuida}
        \caption{Capas presentes en toda aplicación distribuida}
        \label{figure:aplicacion-distribuida}
    \end{figure}

    \begin{enumerate}[label=\textbf{\arabic{*}.}]
        \item \textbf{Capa de presentación.} También conocida como front-end, suele
        residir en el cliente y es con la cual el usuario interactua. 
        Se pueden utilizar distintas tecnologías como: HTML, CSS, javascript\ldots 
        \item \textbf{Lógica de la aplicación o negocio.} Puede residir en cualquiera
        de los componentes -cliente y servidor- incluso en ambos.
        Realiza acciones necesarias para desarrollar la actividad de negocio, 
        tales como: cobro de producto, transacciones...
        \item \textbf{Capa de servicios.} Denominada como back-end, es común que
        resida en el servidor y realiza las actividades típicas de gestión de ficheros,
        acceso a datos en la base de datos, procesamiento de la información\ldots
    \end{enumerate}

Podemos encontrarnos distintos \textbf{tipos de servidores}:
    
\begin{enumerate}[label=\textbf{\arabic{*})}]
    \item Dependiendo de si la aplicación requiere que el servidor recuerde la 
    historia pasada del cliente, se diferencian dos tipos:
         \begin{enumerate}[label=\textbf{\alph{*})}]
            \item Servidor con estados: recuerda información entre las peticiones.
            \item Servidor sin estados: no recuerda información del cliente entre peticiones.
          \end{enumerate}
    \item Atendiendo al modo de procesamiento de las peticiones, encontramos dos 
        servidores diferentes:
         \begin{enumerate}[label=\textbf{\alph{*})}]
            \item Servidor concurrente: se atienden las peticiones de forma 
                paralela, gracias a la implementación multihilo.
            \item Servidor iterativo: se atienden las peticiones de forma 
                secuencial, existiendo una cola de peticiones.
          \end{enumerate}
\end{enumerate}

 
\begin{description}
  \item[Hypertext Transfer Protocol] \hfill \\
  El intercambio de mensajes se realiza mediante el protocolo HTTP, el cual es 
 un protocolo sin estado y ha tenido varias versiones. De estas versiones la más 
utilizada es la versión 1.1 HTTP que especifica la sintaxis y semántica que utilizan
 cliente y servidor para comunicarse.

La estructura de los mensajes de petición y respuesta según el protocolo HTTP se
muestran en la \textit{Figura~\ref{figure:mensajes-http}}. Son en texto plano lo 
cual es una ventaja a la hora de depurar pero hace los mensajes largos.


\end{description}

    \begin{figure}[H]
        \centering
        \includegraphics[width=1.1\textwidth]{img/mensajes-http}
        \caption{Mensajes de petición y respuesta del protrocolo HTTP}
        \label{figure:mensajes-http}
    \end{figure}






%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BACK-END %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Back-end}
\label{sec:back-end}

Tal como hemos visto en la explicación de la arquitectura cliente-servidor el 
\textit{back-end} se corresponde con la \textbf{capa de servicios o de acceso a datos}. 
Y en esta sección vamos a ver la parte teórica de las tecnologías utilizadas en este proyecto
para el desarrollo de dicha capa:

\begin{enumerate}
    \item El lenguaje de programación elegido: Python
    \item El framework utilizado para la implementación del servidor: Django
    \item Servidores HTTP utilizados: Apache y Node.js
    \item La base de datos configurada: MySQL
\end{enumerate}

\subsection{Python}
\label{subsec:python}

El \textbf{lenguaje Python}~\cite{duque2011python}, cuyo nombre es en homenaje 
a la serie \textit{Monty Python's Flying Circus}. Fué 
desarrollado por \textit{Guido van Rossum} para tratar de superar las limitaciones 
del \textit{lenguaje ABC}, que era comúnmente utilizado en el centro de investigación 
en el que trabajaba en Ámsterdam.

Desde el principio se buscó que fuera un \textit{lenguaje divertido} a la hora de ser
utilizado y es común utilizar variables que hacen referencia a sketchs de 
los Monty Python en lugar de variables tradicionales.

En un principio iba a publicarlo bajo una licencia open source propia, pero 
con la versión 1.6 se decidió por cambiar a \textbf{licencia GPL} (GNU General Public
Licence). Así, es posible modificar el código fuente y desarrollar código derivado
sin la necesidad de hacerlo open source.

Existen \textbf{tres versiones} principales, con 1.6, 2.7 y 3.4 como últimas actualizaciones. 
Es destacable indicar que las versiones 2 y 3 son incompatibles entre sí, por el
 gran número de \textit{diferencias entre ellas}~\cite{pilgrim2009dive}.

El desarrollo y promoción se realiza a través de la organización, sin ánimo de 
lucro, \textit{Python Software Foundation}, destacando su \textbf{carácter open source}.

Las \textbf{características} principales de este lenguaje son las siguientes:
\begin{itemize}
    \item Es un lenguaje de \textit{alto nivel}, expresando el algoritmo de forma 
                entendible para el programador.
    \item \textit{Interpretado}, se ejecuta mediante un intérprete y así es más 
            flexible que un lenguaje compilado.
    \item Su filosofía se centra en tratar de conseguir un \textit{código lo más legible
        posible} para el ser humano. Los programas en Python parecen pseudocódigos.
    \item Es \textit{orientado a objetos}, con sus clases, propiedades, métodos\ldots. 
            Todo son objetos.
    \item \textit{Dinámicamente tipado}: puede indicarse el tipo en cualquier momento,
             no es necesario declarlos en un método. Esto reduce el ciclo 
             editar-compilar-comprobar-depurar.
    \item \textit{Fuertemente tipado}: una vez declarada una variable con un tipo, 
            esta no  puede realizar una violación de tipo de datos, sino que 
            deberá ser convertida previamente.
    \item \textit{Case sensitive}: diferencia entre mayúsculas y minúsculas.
\end{itemize}

Ha sido el lenguaje elegido, debido principalmente a dos razones, es el
lenguaje que me ha resultado más atractivo en mis años de aprendizaje en la universidad,
y en segundo lugar, por su amplia utilización mundial. Las estadísticas 
mostradas por CodeEval\footnote{\url{https://www.codeeval.com/}} para 2015 de 
los lenguajes más utilizados pueden observarse
en la \textit{Figura~\ref{figure:estadistica-python}}. En 2014, el dato
para Python era de 30,3\%,
por lo que sigue aumentando el número de programadores que se decantan por este
lenguaje.

     \begin{figure}[H]
        \centering
        \includegraphics[width=0.7\textwidth]{img/estadistica-python}
        \caption{Lenguajes de programación más utilizados en 2015}
        \label{figure:estadistica-python}
    \end{figure}

Por último, destacar que Python es un \textbf{lenguaje multiplataforma} por lo que se 
puede utilizar en diversas plataformas. Y cuenta con varios \textit{web frameworks}, 
entre los que destaca Django, que es la tecnología que trataré a continuación. 

\subsection{Django}
\label{subsec:django}

\textbf{Django} es un framework que facilita al programador la creación de sitios
 webs complejos. 

Entre sus principales \textbf{características}, destacar:

\begin{itemize}
    \item Es de \textit{código abierto}.
    \item Todo está escrito en \textit{Python}.
    \item Sigue el concepto \textit{DRY} -Don't Repeat Yourself- intentando
        no duplicar código.
    \item El programador no tiene que preocuparse de realizar las tareas
            repetitivas que siempre hay que realizar al crear un servidor web:
            abrir sockets, cerrar sockets, configuración de protocolos...
    \item Puede ser utilizado con varias bases de datos, tales como MySQL, SQLite o PostgreSQL.
    \item Su filosofía de desarrollo es MVC -Modelo Vista Controlador-, pero no 
en sentido estricto, sino que ``hacen lo que les parece correcto''. De tal forma, 
podemos encontrar nombres distintos a los comunmente utilizados en un framework 
MVC puro. Se podría decir que es un modelo MTV -Modelo Template Vista-.
\end{itemize}

Para explicar esta última característica y cómo funciona el modelo de Django en concreto,
he creado la \textit{Figura~\ref{figure:mvc-django}}\footnote{Para la creación 
de esta figura me he apoyado en la información encontrada en 
\url{http://es.slideshare.net/alatar/django-el-framework-web-definitivo-1362169}}. 

     \begin{figure}[H]
        \centering
        \includegraphics[width=1.0\textwidth]{img/mvc-django}
        \caption{MVC adaptado de Django}
        \label{figure:mvc-django}
    \end{figure}

Al crear un proyecto nuevo, tendremos por defecto el árbol de directorios
mostrado en la \textit{Figura~\ref{figure:arbol-django}}, donde se pueden observar
algunos de los ficheros mencionados al describir el modelo seguido por Django.

     \begin{figure}[H]
        \centering
        \includegraphics[width=0.6\textwidth]{img/arbol-django}
        \caption{Árbol de directorios de un proyecto en Django}
        \label{figure:arbol-django}
    \end{figure}


Django tiene una gran \textbf{comunidad} de usuarios que defienden al igual que Python
las buenas \textit{prácticas de programación y que el código sea legible}~\cite{greenfeld2013two}.


\subsection{MySQL}
\label{subsec:mysql}

Todo servidor web necesita un \textit{servidor de base de datos} que administre,
almacene y gestione los datos, para asegurar el acceso seguro a ellos.

\textbf{MySQL}~\cite{suehring2002mysql} es uno de los sistemas de administración 
de bases de datos más utilizados en la actualidad, se puede observar en la 
\textit{Figura~\ref{figure:mysql}}\footnote{Información obtenida en 
\url{http://db-engines.com/en/ranking_trend}} cuál es el ranking que ocupa 
relacionado con otras bases de datos muy utilizadas en el mercado, donde se 
puede observar que es una de las tres con más usuarios.


     \begin{figure}[H]
        \centering
        \includegraphics[width=1.1\textwidth]{img/mysql}
        \caption{Ranking de las bases de datos más utilizadas actualmente}
        \label{figure:mysql}
    \end{figure}


Las principales \textbf{características} de MySQL son las siguientes:

\begin{itemize}
    \item Utiliza \textbf{tablas} para guardar los datos.
    \item Tiene un mecanismo interno de almacenamiento el cual guarda los datos
            salvados en dispositivos físicos.
    \item Es \textbf{relacional}(BDR), por lo que permite establecer interconexiones
        o relaciones entre los datos ya guardados en tablas, siguiendo el 
        \textit{modelo relacional}.
    \item Es \textbf{multiplataforma}.
    \item Utiliza multihilos mediante hilos del kernel.
    \item Los clientes se conectan al servidor MySQL usando sockets TCP/IP.
    \item Tiene bases de datos de hasta 50 millones de registros.
\end{itemize}


Destacar que tiene \textbf{licenciamiento dual}: se puede utilizar bajo la GNU GPL, 
pero si se quiere incorporar en productos privativos es necesario comprar 
otra licencia.

\subsection{Servidor HTTP Apache}
\label{subsec:apache}

El \textbf{servidor HTTP Apache} es un servidor web HTTP de \textit{software libre}. El servidor
se desarrolla y mantiene bajo la \textit{Apache Software Foundation} dentro del proyecto 
HTTP Server \textit{(httpd)}.

La arquitectura del servidor Apache es \textbf{altamente modular}, lo cual permite añadir
más funcionalidades de modo sencillo y ser extendido fácilmente. Esta es una 
de las características que le hacen ser muy utilizado a la hora de poner una 
web en producción, ya que se pueden incluir módulos de frameworks. Como es el caso
del módulo \textit{mod\_wsgi de Django}.

Algo históricamente notable es la licencia de software bajo la cual es distribuido. 
La \textbf{Licencia Apache} es una licencia de software libre y permite al usuario la 
libertad de uso para cualquier propósito, ya sea de distribución, para ser 
modificado y le permite además, distribuir versiones modificadas del software.

La \textbf{configuración} del mismo se realiza mediante el fichero apache2.conf 
o \textbf{httpd.conf} y para que los cambios en él sean agregados es necesario 
reiniciar el servidor. 





\subsection{Servidor HTTP Node.js}
\label{subsec:nodejs}

\textbf{Node.js} es un entorno de ejecución que permite trabajar sobre el intérprete de 
\textit{JavaScript} en el lado del servidor. Utiliza el motor V8, desarrollado por
Google para el navegador Chrome, compilando javascript en el lado del servidor
a altas velocidades.

Señalar que es de código abierto y multiplataforma. Y la característica que lo
hace destacar es el hecho de poseer un excelente \textit{modelo de eventos}, ideal para 
la programación asíncrona.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% FRONT-END %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Front-end}
\label{sec:back-front}



\subsection{HTML}
\label{subsec:html}

- 

\subsection{CSS}
\label{subsec:css}
-

\subsection{Bootstrap}
\label{subsec:bootstrap}
-

\subsection{JavaScript}
\label{subsec:javascript}
-

\subsection{AJAX}
\label{subsec:ajax}
-

%%%%%%%%%%%%%%%%%%% PLATAFORMA EN LA NUBE: AZURE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Plataforma en la nube: Azure}
\label{sec:azure}
-

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ANALÍTICA WEB %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Analítica web: Google Analytics}
\label{sec:analitica-web}
-


%%%%%%%%%%%%%%%%%%%%% LIBRERIAS y PLUGINS UTILIZADOS %%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Librerías utilizadas}
\label{sec:librerias}
-


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% DISEÑO E IMPLEMENTACIÓN %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Diseño e implementación}

\section{Arquitectura general de Dr. Scratch} 
\label{sec:arquitectura}

\subsection{Servidor} 
\label{subsec:servidor}

\subsection{Modelo de datos y fichero de log} 
\label{subsec:arquitectura}

\subsection{APIs y plugins utilizados} 
\label{subsec:apis}

\subsection{Plataforma web} 
\label{subsec:plataforma}

\subsection{Traducción} 
\label{subsec:traduccion}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% INTERFAZ DE USUARIO %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
\chapter{Interfaz de usuario}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% RESULTADOS %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Resultados}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CONCLUSIONES %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\chapter{Conclusiones}
\label{chap:conclusiones}


\section{Consecución de objetivos}
\label{sec:consecucion-objetivos}

Esta sección es la sección espejo de las dos primeras del capítulo de objetivos,
donde se planteaba el objetivo general y se elaboraban los específicos.

Es aquí donde hay que debatir qué se ha conseguido y qué no. Cuando algo no
se ha conseguido, se ha de justificar, en términos de qué problemas se han
encontrado y qué medidas se han tomado para mitigar esos problemas.


\section{Aplicación de lo aprendido}
\label{sec:aplicacion}

Aquí viene lo que has aprendido durante el Grado/Máster y que has aplicado
en el TFG/TFM. Una buena idea es poner las asignaturas más relacionadas y
comentar en un párrafo los conocimientos y habilidades puestos en práctica.

\begin{enumerate}
  \item a
  \item b
\end{enumerate}


\section{Lecciones aprendidas}
\label{sec:lecciones_aprendidas}

Aquí viene lo que has aprendido en el Trabajo Fin de Grado/Máster.

\begin{enumerate}
  \item a
  \item b
\end{enumerate}


\section{Trabajos futuros}
\label{sec:trabajos_futuros}

Ningún software se termina, así que aquí vienen ideas y funcionalidades
que estaría bien tener implementadas en el futuro.

Es un apartado que sirve para dar ideas de cara a futuros TFGs/TFMs.


\section{Valoración personal}
\label{sec:valoracion}

Finalmente (y de manera opcional), hay gente que se anima a dar su punto de
vista sobre el proyecto, lo que ha aprendido, lo que le gustaría haber aprendido,
las tecnologías utilizadas y demás.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% APÉNDICE(S) %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage
\appendix
\chapter{Manual de usuario}
\label{app:manual}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% BIBLIOGRAFIA %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cleardoublepage

% Las siguientes dos instrucciones es todo lo que necesitas
% para incluir las citas en la memoria
\bibliographystyle{abbrv}
\bibliography{memoria}  % memoria.bib es el nombre del fichero que contiene
% las referencias bibliográficas. Abre ese fichero y mira el formato que tiene,
% que se conoce como BibTeX. Hay muchos sitios que exportan referencias en
% formato BibTeX. Prueba a buscar en http://scholar.google.com por referencias
% y verás que lo puedes hacer de manera sencilla.
% Más información: 
% http://texblog.org/2014/04/22/using-google-scholar-to-download-bibtex-citations/

\end{document}
